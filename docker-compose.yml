version: '3.7'
services:


  ## MySQL Docker : For Service Order &  Service Inventory
  postgres-order:
    container_name: postgres-order
    image: postgres
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres

    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  postgres-inventory:
    container_name: postgres-inventory
    image: postgres
    environment:
      POSTGRES_DB: inventory-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres

    ports:
      - "5432:5432"
    command: -p 5432
    expose:
      - "5432"

    restart: always

  ## Mongo Docker Compose Config
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - mongo-data:/data/db


  ## Eureka Server
  discovery-server:
    image: khalilmissaoui/discovery-service
    container_name: discovery-server
    restart: on-failure
    volumes:
      - .m2:/root/.m2
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  ## Discovery Server
  api-gateway:
    image: khalilmissaoui/api-gateway
    container_name: api-gateway
    restart: on-failure
    ports:
      - "8181:8080"
    expose:
      - "8181"
    volumes:
      - .m2:/root/.m2
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server
      - product-service
      - order-service
      - inventory-service


  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    image: khalilmissaoui/product-service
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server


  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    image: khalilmissaoui/order-service
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
    extra_hosts:
      - "host.docker.internal:host-gateway"

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    image: khalilmissaoui/inventory-service
    restart: on-failure
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  mongo-data:
    driver: local



